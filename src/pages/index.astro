---
import BaseLayout from "../layouts/base_layout.astro"

(function (){
	const h = new Date().getHours()
	const m = new Date().getMinutes()
	const s = new Date().getSeconds()
})()
setInterval(()=>{}, 1000)
---


<BaseLayout>
	<div id="time" class="shadow">-- : -- : --</div>
</BaseLayout>

<style>
:root {
	--gradient-shadow: linear-gradient(
		45deg,
		#fb0094,
		#0000ff,
		#00ff00,
		#ffff00,
		#ff0000,
		#fb0094,
		#0000ff,
		#00ff00,
		#ffff00,
		#ff0000
	);
}
body {
	margin: 0;
	padding: 0;
	background: #000;
	display: flex;
	justify-content: center;
	align-items: center;
	height: 100vh;
}
.shadow {
	display: flex;
	justify-content: center;
	align-items: center;
	position: relative;
	color: #fff;
	text-align: center;
	font-size: 50px;
	font-weight: bold;
	width: 500px !important;
	height: 250px;
	background: linear-gradient(0deg, #000, #262626);
}
.shadow:before,
.shadow:after {
	content: "";
	position: absolute;
	top: -2px;
	left: -2px;
	background: var(--gradient-shadow);
	background-size: 400%;
	width: calc(100% + 4px);
	height: calc(100% + 4px);
	z-index: -1;
	animation: animate 20s linear infinite;
}

.shadow:after {
	filter: blur(20px);
}

@keyframes animate {
	0% {
		background-position: 0 0;
	}
	50% {
		background-position: 300% 0;
	}
	100% {
		background-position: 0 0;
	}
}

	#bg-wrapper {
		position: relative;
		background-image: url("../assets/images/mount.jpg");
		background-size: cover;
    	background-position: center;
    	height: 100vh; 
	}
	#bg-wrapper::before {
		content: '';
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		background-color: rgba(0, 0, 0, 0.579); /* Adjust the color and opacity as needed */
		z-index: 1;
	}

	#time {
		font-size: 102px;
		font-weight: 400;
		width: 100%;
	}
</style>



<script>

	(function (){
		const updateTime = () => {
			const now = new Date();
			const h = String(now.getHours()).padStart(2, '0');
			const m = String(now.getMinutes()).padStart(2, '0');
			const s = String(now.getSeconds()).padStart(2, '0');
			document.getElementById('time').textContent = `${h} : ${m} : ${s}`;
		};
	
		let intervalId;
		updateTime()
		intervalId = setInterval(updateTime, 1000);
		
	})();
</script>